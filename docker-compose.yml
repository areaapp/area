version: "3.4"

services:
  # Nginx reverse proxy
  nginx:
    image: nginx:latest
    container_name: "area_proxy"
    ports:
      - "8080:8080"
      - "8081:8081"
      - "8082:8082"
    volumes:
      - v-nginx:/etc/nginx/conf.d
      - v-docs:/opt/area/docs
      - v-releases:/opt/area/releases
    restart: always
    networks:
      - net-web
      - net-api
      - net-proxy
    depends_on:
      - client_web
      - release_android
      - docs

  # Area database (postgresql)
  db:
    image: "postgres"
    container_name: "area_db"
    environment:
      - POSTGRES_USER=${DBUSERNAME}
      - POSTGRES_PASSWORD=${DBPASSWORD}
      - POSTGRES_DB=${DBNAME}
    volumes:
      - v-db:/var/lib/postgresql/data
    networks:
      - net-db

  # Area api (adonis)
  server:
    depends_on:
      - db
    networks:
      - net-api
      - net-db
      - net-proxy
    build: ./area-api
    container_name: "area_api"
    environment:
      - DB_USER=${DBUSERNAME}
      - DB_PASSWORD=${DBPASSWORD}
      - DB_DATABASE=${DBNAME}
      - NODE_ENV=production
    restart: always
    volumes:
      - v-docs:/opt/area/docs

  # Area web SSR (nuxt)
  client_web:
    depends_on:
      - server
    networks:
      - net-web
      - net-proxy
    build: ./area-web
    container_name: "area_web"
    restart: always

  # Area android build
  release_android:
    depends_on:
      - client_web
    container_name: "area_android"
    build: ./area-android
    volumes:
      - v-releases:/opt/area/releases

  # Executor build
  executor:
    depends_on:
      - nginx
    container_name: "area_executor"
    build: ./area-executor
    restart: always
    networks:
      - net-db
      - net-proxy

  docs:
    container_name: "area_docs"
    build: ./docs
    volumes:
      - v-docs:/opt/area/docs


volumes:
  v-releases:
    driver_opts:
      device: "${PWD}/volumes/releases"
      type: none
      o: bind
  v-db:
    driver_opts:
      device: "${PWD}/volumes/db"
      type: none
      o: bind
  v-nginx:
    driver_opts:
      device: "${PWD}/volumes/nginx"
      type: none
      o: bind
  v-docs:
    driver_opts:
      device: "${PWD}/volumes/docs"
      type: none
      o: bind

networks:
  net-web:
    driver: bridge
  net-api:
    driver: bridge
  net-db:
    driver: bridge
  net-proxy:
    driver: bridge
